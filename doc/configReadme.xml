<?xml version='1.0' encoding='utf-8'?>
<configuration>
	<placeholders>
		<placeholder id="template_name">
		Workday Worker to ServiceNow Request Migration
		</placeholder>
	</placeholders>
	<sections>
		<section id="use_case">

			As a Workday admin I want to create 2 service requests in ServiceNow for every new unique worker from Workday

1. one service request for setting up a desk
2. one service request for setting up a computer

As implemented, this template leverages the Mule batch module.
The batch job is divided into Input, Process and On Complete stages.
During the Input stage the template queries Workday for all the existing active workers that match the filtering criteria. The criteria is based on manipulations starting from the given date.
The Process stage will create new service request assigned to the concrete item - desk or computer in Service Now for each worker.
Finally, during the On Complete stage the template will print output statistics data into the console and send a notification email with the result of the batch execution.

		</section>
		<section id="considerations">
			There are a couple of things you should take into account before running this template:

1. **Workday email uniqueness**: The email can be repeated for two or more accounts (or missing). Therefore Workday accounts with duplicate emails or without email will be removed from processing in the Input stage.
2. **Workday termination status**: The worker in Workday can be terminated. If worker is terminated, he will be removed from processing in Input stage too.

		</section>
		<section id="run_it">


In any of the ways you would like to run this template this is an example of the output you'll see after browse toting the HTTP endpoint:

{
    "Message": "Batch Process initiated",
    "ID": "0ddb8240-ac54-11e8-b0d1-2ac63fa6f77a",
    "RecordCount": 3,
    "StartExecutionOn": "2018-08-30T14:56:04Z"
}

		</section>
		<section id="running_on_cloudhub">

While [creating your application on CloudHub](http://www.mulesoft.org/documentation/display/current/Hello+World+on+CloudHub) (Or you can do it later as a next step), you need to go to Deployment &gt; Advanced to set all environment variables detailed in **Properties to be configured** as well as the **mule.env**.
Once your app is all set up and started, supposing you choose `wdayworkermigration` as domain name to trigger the use case, you just need to browse to `http://wdayworkermigration.cloudhub.io/migrate` and report will be sent to the e-mail configured.

		</section>
		<section id="running_on_standalone">

Complete all properties in one of the property files, for example in [mule.prod.properties] (../master/src/main/resources/mule.prod.properties) and run your app with the corresponding environment variable to use it. To follow the example, this will be `mule.env=prod`.
After this, to trigger the use case you just need to browse to the local HTTP connector with the port you configured in your file. If this is, for instance, `9090` then you should browse to: `http://localhost:9090/migrate` and this will output a summary report and send it in the e-mail.

		</section>
		<section id="application_configuration">

### Application configuration
+ http.port `9090`
+ page.size `10`
+ migration.startDate `"2015-09-03T09:10:00.000+0200"`

#### Workday Connector configuration
+ wday.username `admin@workday`
+ wday.password `secret`
+ wday.tenant `tenant`
+ wday.hostname `wd2-impl-services1.workday.com`
+ wday.responseTimeout `25000`

#### ServiceNow Connector
+ snow.user `snow_user1`
+ snow.password `ExamplePassword881`
+ snow.endpoint `https://instance.service-now.com`

#### ServiceNow Items configuration
+ snow.pc.assignedTo `sysId_of_the_ServiceNow_User`
+ snow.pc.model `sysId_of_the_ServiceNow_Item1`
+ snow.pc.deliveryDays `5`
+ snow.pc.price `3000`

+ snow.desk.assignedTo `sysId_of_the_ServiceNow_User`
+ snow.desk.model `sysId_of_the_ServiceNow_Item2`
+ snow.desk.deliveryDays `3`
+ snow.desk.price `500`

+ snow.location `sysId_of_the_ServiceNow_Location`
+ snow.version `snow_version`


#### SMTP Services configuration
+ smtp.host `smtp.gmail.com`
+ smtp.port `465`
+ smtp.user `sender%40gmail.com`
+ smtp.password `secret`

#### Mail details
+ mail.from `users.report%40mulesoft.com`
+ mail.to `user@mulesoft.com`
+ mail.subject `Workers Migration Report`


		</section>
		<section id="api_calls">
			There are no special considerations regarding API calls.
		</section>
		<section id="default_endpoints_xml">

This file provides the inbound and outbound sides of your integration app.
This template has only an [HTTP Inbound Endpoint](http://www.mulesoft.org/documentation/display/current/HTTP+Endpoint+Reference) as the way to trigger the use case.

**HTTP Inbound Endpoint** - Start Report Generation

+ `${http.port}` is set as a property to be defined either on a property file or in CloudHub environment variables.
+ The path configured by default is `migrate` and you are free to change it for the one you prefer.
+ The host name for all endpoints in your CloudHub configuration should be defined as `localhost`. CloudHub will then route requests from your application domain URL to the endpoint.
+ The endpoint is configured as a *request-response* since as a result of calling it the response will be the total of Workers migrated and filtered by the criteria specified.

		</section>
		<section id="default_business_logic_xml">

Functional aspect of the Template is implemented on this XML, directed by one flow responsible of excecuting the logic.
For the pourpose of this particular Template the *mainFlow* just excecutes a batch job. which handles all the logic of it.

	</section>
	</sections>
</configuration>
